<UserControl x:Class="GameDeckWpf.View.GameDeckMasterDetail"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:GameDeckWpf.View" 
             xmlns:viewmodel="clr-namespace:GameDeckWpf.ViewModel" 
             d:DataContext="{d:DesignInstance Type=viewmodel:GameDeckMasterDetailVM}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             Background="White">
    <DockPanel>
        <Border DockPanel.Dock="Bottom" BorderThickness="0,1,0,0" BorderBrush="DimGray">
            <StackPanel Orientation="Horizontal" Margin="10" HorizontalAlignment="Right">
                <StackPanel.Resources>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </Style>
                    <Style TargetType="Border">
                        <Setter Property="Margin" Value="2"/>
                        <Setter Property="CornerRadius" Value="2"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="DarkSlateGray"/>
                        <Setter Property="Background" Value="LightGray"/>
                    </Style>
                </StackPanel.Resources>
                <Border Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}">
                    <Button Command="{Binding BtnModifier_CMD}">
                        Modifier
                    </Button>
                </Border>
                <Border Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}">
                    <Button Command="{Binding BtnAjouter_CMD}">
                        Ajouter
                    </Button>
                </Border>
                <Border Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibilityRevert}, UpdateSourceTrigger=PropertyChanged}">
                    <Button Command="{Binding BtnEnregistrer_CMD}">
                        Enregistrer
                    </Button>
                </Border>
                <Border Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibilityRevert}, UpdateSourceTrigger=PropertyChanged}">
                    <Button Command="{Binding BtnAnnuler_CMD}">
                        Annuler
                    </Button>
                </Border>
                <Border Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}">
                    <Button Command="{Binding BtnSupprimer_CMD}">
                        Supprimer
                    </Button>
                </Border>
            </StackPanel>
        </Border>

        <Border DockPanel.Dock="Left" BorderThickness="0,1,1,0" BorderBrush="DimGray">
            <StackPanel VerticalAlignment="Stretch" DockPanel.Dock="Left" MinWidth="150">
                <Label HorizontalAlignment="Left" Content="Cathégorie"/>
                <ComboBox DisplayMemberPath="Nom" StaysOpenOnEdit="True" IsEditable="True"
                          IsEnabled="{Binding IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding GenresList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding Cmb_CathegorieItemChangedCMD}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}, Path=SelectedItem}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <ListView VerticalAlignment="Stretch" IsEnabled="{Binding IsReadOnly, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding CurrentGame, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      ItemsSource="{Binding GamesList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="DodgerBlue"/>
                            <Setter Property="Margin" Value="0,0,0,1"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border CornerRadius="2">
                                <TextBlock FontWeight="Bold" TextAlignment="Center" Text="{Binding Nom}"/>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </StackPanel>
        </Border>

        <ScrollViewer DockPanel.Dock="Right" VerticalScrollBarVisibility="Auto">
            <ScrollViewer.Resources>
                <Style TargetType="Label">
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="HorizontalContentAlignment" Value="Right"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="Width" Value="100"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>
                <!--<Style TargetType="Label">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Style>-->
                <Style TargetType="TextBox">
                    <Setter Property="Width" Value="125"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Style.Triggers>
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBox}, Path=IsReadOnly}" Value="true">-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsReadOnly}" Value="true">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{x:Null}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Width" Value="125"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
                <Style TargetType="DatePicker">
                    <Setter Property="Width" Value="125"/>
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>
            </ScrollViewer.Resources>

            <StackPanel Margin="15,5">
                <StackPanel VerticalAlignment="Top"
                         HorizontalAlignment="Left">
                    <StackPanel.Resources>
                        <Style TargetType="WrapPanel">
                            <Setter Property="Orientation" Value="Horizontal"/>
                        </Style>
                    </StackPanel.Resources>

                    <WrapPanel>
                        <Label Grid.Column="0"
                           Content="Nom"/>
                        <TextBox Grid.Column="1"
                             Text="{Binding CurrentGame.Nom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                             IsReadOnly="{Binding IsReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </WrapPanel>

                    <WrapPanel>
                        <Label Grid.Column="0"
                               Content="Editeur"/>
                        <StackPanel VerticalAlignment="Center">
                            <ComboBox DisplayMemberPath="Nom" Grid.Column="1" StaysOpenOnEdit="True" IsEditable="True" 
                                      Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibilityRevert}, UpdateSourceTrigger=PropertyChanged}" 
                                      SelectedValue="{Binding Path=CurrentGame.EditeurId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedValuePath="Id"
                                      SelectedItem="{Binding Path=CurrentGame.Editeur, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                      ItemsSource="{Binding EditeursList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Grid.Column="1" 
                                     Text="{Binding CurrentGame.Editeur.Nom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                        </StackPanel>
                    </WrapPanel>

                    <WrapPanel>
                        <Label Grid.Column="0"
                               Content="Genre"/>
                        <StackPanel VerticalAlignment="Center">
                            <ComboBox DisplayMemberPath="Nom" Grid.Column="1" StaysOpenOnEdit="True" IsEditable="True" 
                                      Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibilityRevert}, UpdateSourceTrigger=PropertyChanged}" 
                                      SelectedValue="{Binding Path=CurrentGame.GenreId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" SelectedValuePath="Id"
                                      SelectedItem="{Binding Path=CurrentGame.Genre, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                      ItemsSource="{Binding GenresList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBox Grid.Column="1" 
                                     Text="{Binding CurrentGame.Genre.Nom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                        </StackPanel>
                    </WrapPanel>

                    <WrapPanel>
                        <Label Grid.Column="0"
                           Content="Date de sortie"/>
                        <StackPanel>
                            <DatePicker Grid.Column="1"
                                    Text="{Binding CurrentGame.DateSortie, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ConverterCulture=fr-FR, StringFormat=d}"
                                    IsEnabled="{Binding IsReadOnly, Converter={StaticResource RevertBool}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibilityRevert}, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding Dp_DateSortieLostFocusCMD}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DatePicker}, Path=Text}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DatePicker>
                            <TextBox Grid.Column="1"  IsReadOnly="True"
                                     Text="{Binding CurrentGame.DateSortie, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ConverterCulture=fr-FR, StringFormat=d}"
                                     Visibility="{Binding IsReadOnly, Converter={StaticResource boolToVisibility}, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>

                    </WrapPanel>

                </StackPanel>

                <Label Grid.Row="0"
                       Content="Description"/>
                <TextBox Grid.Row="1" MinHeight="50" Width="auto"
                         VerticalContentAlignment="Top"
                         Text="{Binding CurrentGame.Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         IsReadOnly="{Binding IsReadOnly, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

        </ScrollViewer>
    </DockPanel>
</UserControl>
